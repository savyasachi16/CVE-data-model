from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, String, Date, Float, ForeignKey

Base = declarative_base()


class CVE(Base):
    __tablename__ = "cves"
    cve_id = Column(String, primary_key=True)
    description = Column(String)
    cvss3_base_score = Column(Float)
    cvss2_base_score = Column(Float)
    published_date = Column(Date)
    modified_date = Column(Date)

    def __repr__(self):
        return "<CVE(CVE ID='{}', Description='{}', Published Date={}, CVSS3 Base Score={}, CVSS2 Base Score={},Modified Date={})>".format(self.cve_id, self.description, self.cvss3_base_score, self.cvss2_base_score, self.published_date, self.modified_date)


class CPE(Base):
    __tablename__ = "cpes"
    cpe_id = Column(Integer, primary_key=True, autoincrement=True)
    product = Column(String)

    def __repr__(self):
        return "<CPE(CPE ID='{}', Product={})>".format(self.cpe_id, self.product)


class Junction(Base):
    __tablename__ = "junction"
    id = Column(Integer, primary_key=True, autoincrement=True)
    cve_id = Column(String, ForeignKey("cves.cve_id"))
    cpe_id = Column(Integer, ForeignKey("cpes.cpe_id"))

    def __repr__(self):
        return "<Junction(CVE ID='{}', CPE ID={})>".format(self.cve_id, self.cpe_id)
