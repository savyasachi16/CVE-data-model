import json


class Parser:
    def __init__(self):
        self.file = "./rawdata/nvdcve-1.1-recent.json"

    def extractData(self, filename):
        cves = []
        with open(filename) as json_file:
            data = json.load(json_file)
            for cve in data["CVE_Items"]:
                cveDict = {}
                cve_id = cve["cve"]["CVE_data_meta"]["ID"]
                description = cve["cve"]["description"]["description_data"][0]["value"]
                published_date = cve["publishedDate"]
                modified_date = cve["lastModifiedDate"]
                cpe_matches = self.extractCPEMatches(
                    cve["configurations"]["nodes"])
                base_score_v2, base_score_v3 = self.extractBaseScores(
                    cve["impact"])

                cveDict["cve_id"] = cve_id
                cveDict["description"] = description
                cveDict["cpe_matches"] = cpe_matches
                cveDict["base_score_v2"] = base_score_v2
                cveDict["base_score_v3"] = base_score_v3
                cveDict["published_date"] = published_date
                cveDict["modified_date"] = modified_date
                cves.append(cveDict)
        print(f"{len(cves)} CVES extracted from {filename}")
        return cves

    def extractCPEMatches(self, nodes):
        cpe_matches = []
        for node in nodes:
            if node:
                if "cpe_match" in node.keys():
                    for cpe_match in node["cpe_match"]:
                        cpe_matches.append(cpe_match)
        return cpe_matches

    def extractBaseScores(self, impact):
        base_score_v2 = None
        base_score_v3 = None
        if "baseMetricV2" in impact.keys():
            base_score_v2 = impact["baseMetricV2"]["cvssV2"]["baseScore"]
        if "baseMetricV3" in impact.keys():
            base_score_v3 = impact["baseMetricV3"]["cvssV3"]["baseScore"]
        return base_score_v2, base_score_v3

    def getCVEs(self, filename):
        return self.extractData(filename)

if __name__ == "__main__":
    exe = Parser()
    exe.getCVEs("./rawdata/nvdcve-1.1-modified.json")
